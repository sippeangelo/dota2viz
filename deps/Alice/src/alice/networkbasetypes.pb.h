// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkbasetypes.proto

#ifndef PROTOBUF_networkbasetypes_2eproto__INCLUDED
#define PROTOBUF_networkbasetypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "network_connection.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_networkbasetypes_2eproto();
void protobuf_AssignDesc_networkbasetypes_2eproto();
void protobuf_ShutdownFile_networkbasetypes_2eproto();

class CMsgVector;
class CMsgVector2D;
class CMsgQAngle;
class CMsg_CVars;
class CMsg_CVars_CVar;
class CNETMsg_NOP;
class CNETMsg_SplitScreenUser;
class CNETMsg_Disconnect;
class CNETMsg_File;
class CNETMsg_Tick;
class CNETMsg_StringCmd;
class CNETMsg_SetConVar;
class CNETMsg_SignonState;
class CSVCMsg_GameEvent;
class CSVCMsg_GameEvent_key_t;
class CSVCMsgList_GameEvents;
class CSVCMsgList_GameEvents_event_t;
class CSVCMsg_UserMessage;
class CSVCMsgList_UserMessages;
class CSVCMsgList_UserMessages_usermsg_t;

enum SIGNONSTATE {
  SIGNONSTATE_NONE = 0,
  SIGNONSTATE_CHALLENGE = 1,
  SIGNONSTATE_CONNECTED = 2,
  SIGNONSTATE_NEW = 3,
  SIGNONSTATE_PRESPAWN = 4,
  SIGNONSTATE_SPAWN = 5,
  SIGNONSTATE_FULL = 6,
  SIGNONSTATE_CHANGELEVEL = 7
};
bool SIGNONSTATE_IsValid(int value);
const SIGNONSTATE SIGNONSTATE_MIN = SIGNONSTATE_NONE;
const SIGNONSTATE SIGNONSTATE_MAX = SIGNONSTATE_CHANGELEVEL;
const int SIGNONSTATE_ARRAYSIZE = SIGNONSTATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SIGNONSTATE_descriptor();
inline const ::std::string& SIGNONSTATE_Name(SIGNONSTATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SIGNONSTATE_descriptor(), value);
}
inline bool SIGNONSTATE_Parse(
    const ::std::string& name, SIGNONSTATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SIGNONSTATE>(
    SIGNONSTATE_descriptor(), name, value);
}
enum NET_Messages {
  net_NOP = 0,
  net_Disconnect = 1,
  net_File = 2,
  net_SplitScreenUser = 3,
  net_Tick = 4,
  net_StringCmd = 5,
  net_SetConVar = 6,
  net_SignonState = 7
};
bool NET_Messages_IsValid(int value);
const NET_Messages NET_Messages_MIN = net_NOP;
const NET_Messages NET_Messages_MAX = net_SignonState;
const int NET_Messages_ARRAYSIZE = NET_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* NET_Messages_descriptor();
inline const ::std::string& NET_Messages_Name(NET_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    NET_Messages_descriptor(), value);
}
inline bool NET_Messages_Parse(
    const ::std::string& name, NET_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NET_Messages>(
    NET_Messages_descriptor(), name, value);
}
// ===================================================================

class CMsgVector : public ::google::protobuf::Message {
 public:
  CMsgVector();
  virtual ~CMsgVector();

  CMsgVector(const CMsgVector& from);

  inline CMsgVector& operator=(const CMsgVector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVector& default_instance();

  void Swap(CMsgVector* other);

  // implements Message ----------------------------------------------

  CMsgVector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVector& from);
  void MergeFrom(const CMsgVector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // optional float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:CMsgVector)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgVector* default_instance_;
};
// -------------------------------------------------------------------

class CMsgVector2D : public ::google::protobuf::Message {
 public:
  CMsgVector2D();
  virtual ~CMsgVector2D();

  CMsgVector2D(const CMsgVector2D& from);

  inline CMsgVector2D& operator=(const CMsgVector2D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVector2D& default_instance();

  void Swap(CMsgVector2D* other);

  // implements Message ----------------------------------------------

  CMsgVector2D* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVector2D& from);
  void MergeFrom(const CMsgVector2D& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:CMsgVector2D)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgVector2D* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQAngle : public ::google::protobuf::Message {
 public:
  CMsgQAngle();
  virtual ~CMsgQAngle();

  CMsgQAngle(const CMsgQAngle& from);

  inline CMsgQAngle& operator=(const CMsgQAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQAngle& default_instance();

  void Swap(CMsgQAngle* other);

  // implements Message ----------------------------------------------

  CMsgQAngle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQAngle& from);
  void MergeFrom(const CMsgQAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // optional float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:CMsgQAngle)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsgQAngle* default_instance_;
};
// -------------------------------------------------------------------

class CMsg_CVars_CVar : public ::google::protobuf::Message {
 public:
  CMsg_CVars_CVar();
  virtual ~CMsg_CVars_CVar();

  CMsg_CVars_CVar(const CMsg_CVars_CVar& from);

  inline CMsg_CVars_CVar& operator=(const CMsg_CVars_CVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars_CVar& default_instance();

  void Swap(CMsg_CVars_CVar* other);

  // implements Message ----------------------------------------------

  CMsg_CVars_CVar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg_CVars_CVar& from);
  void MergeFrom(const CMsg_CVars_CVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsg_CVars.CVar)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsg_CVars_CVar* default_instance_;
};
// -------------------------------------------------------------------

class CMsg_CVars : public ::google::protobuf::Message {
 public:
  CMsg_CVars();
  virtual ~CMsg_CVars();

  CMsg_CVars(const CMsg_CVars& from);

  inline CMsg_CVars& operator=(const CMsg_CVars& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars& default_instance();

  void Swap(CMsg_CVars* other);

  // implements Message ----------------------------------------------

  CMsg_CVars* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg_CVars& from);
  void MergeFrom(const CMsg_CVars& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg_CVars_CVar CVar;

  // accessors -------------------------------------------------------

  // repeated .CMsg_CVars.CVar cvars = 1;
  inline int cvars_size() const;
  inline void clear_cvars();
  static const int kCvarsFieldNumber = 1;
  inline const ::CMsg_CVars_CVar& cvars(int index) const;
  inline ::CMsg_CVars_CVar* mutable_cvars(int index);
  inline ::CMsg_CVars_CVar* add_cvars();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
      cvars() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
      mutable_cvars();

  // @@protoc_insertion_point(class_scope:CMsg_CVars)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar > cvars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CMsg_CVars* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_NOP : public ::google::protobuf::Message {
 public:
  CNETMsg_NOP();
  virtual ~CNETMsg_NOP();

  CNETMsg_NOP(const CNETMsg_NOP& from);

  inline CNETMsg_NOP& operator=(const CNETMsg_NOP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_NOP& default_instance();

  void Swap(CNETMsg_NOP* other);

  // implements Message ----------------------------------------------

  CNETMsg_NOP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_NOP& from);
  void MergeFrom(const CNETMsg_NOP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CNETMsg_NOP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_NOP* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SplitScreenUser : public ::google::protobuf::Message {
 public:
  CNETMsg_SplitScreenUser();
  virtual ~CNETMsg_SplitScreenUser();

  CNETMsg_SplitScreenUser(const CNETMsg_SplitScreenUser& from);

  inline CNETMsg_SplitScreenUser& operator=(const CNETMsg_SplitScreenUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SplitScreenUser& default_instance();

  void Swap(CNETMsg_SplitScreenUser* other);

  // implements Message ----------------------------------------------

  CNETMsg_SplitScreenUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SplitScreenUser& from);
  void MergeFrom(const CNETMsg_SplitScreenUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_SplitScreenUser)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 slot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SplitScreenUser* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_Disconnect : public ::google::protobuf::Message {
 public:
  CNETMsg_Disconnect();
  virtual ~CNETMsg_Disconnect();

  CNETMsg_Disconnect(const CNETMsg_Disconnect& from);

  inline CNETMsg_Disconnect& operator=(const CNETMsg_Disconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_Disconnect& default_instance();

  void Swap(CNETMsg_Disconnect* other);

  // implements Message ----------------------------------------------

  CNETMsg_Disconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_Disconnect& from);
  void MergeFrom(const CNETMsg_Disconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::ENetworkDisconnectionReason reason() const;
  inline void set_reason(::ENetworkDisconnectionReason value);

  // @@protoc_insertion_point(class_scope:CNETMsg_Disconnect)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_Disconnect* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_File : public ::google::protobuf::Message {
 public:
  CNETMsg_File();
  virtual ~CNETMsg_File();

  CNETMsg_File(const CNETMsg_File& from);

  inline CNETMsg_File& operator=(const CNETMsg_File& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_File& default_instance();

  void Swap(CNETMsg_File* other);

  // implements Message ----------------------------------------------

  CNETMsg_File* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_File& from);
  void MergeFrom(const CNETMsg_File& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 transfer_id = 1;
  inline bool has_transfer_id() const;
  inline void clear_transfer_id();
  static const int kTransferIdFieldNumber = 1;
  inline ::google::protobuf::int32 transfer_id() const;
  inline void set_transfer_id(::google::protobuf::int32 value);

  // optional string file_name = 2;
  inline bool has_file_name() const;
  inline void clear_file_name();
  static const int kFileNameFieldNumber = 2;
  inline const ::std::string& file_name() const;
  inline void set_file_name(const ::std::string& value);
  inline void set_file_name(const char* value);
  inline void set_file_name(const char* value, size_t size);
  inline ::std::string* mutable_file_name();
  inline ::std::string* release_file_name();
  inline void set_allocated_file_name(::std::string* file_name);

  // optional bool is_replay_demo_file = 3;
  inline bool has_is_replay_demo_file() const;
  inline void clear_is_replay_demo_file();
  static const int kIsReplayDemoFileFieldNumber = 3;
  inline bool is_replay_demo_file() const;
  inline void set_is_replay_demo_file(bool value);

  // optional bool deny = 4;
  inline bool has_deny() const;
  inline void clear_deny();
  static const int kDenyFieldNumber = 4;
  inline bool deny() const;
  inline void set_deny(bool value);

  // optional bool is_file_requested = 5;
  inline bool has_is_file_requested() const;
  inline void clear_is_file_requested();
  static const int kIsFileRequestedFieldNumber = 5;
  inline bool is_file_requested() const;
  inline void set_is_file_requested(bool value);

  // @@protoc_insertion_point(class_scope:CNETMsg_File)
 private:
  inline void set_has_transfer_id();
  inline void clear_has_transfer_id();
  inline void set_has_file_name();
  inline void clear_has_file_name();
  inline void set_has_is_replay_demo_file();
  inline void clear_has_is_replay_demo_file();
  inline void set_has_deny();
  inline void clear_has_deny();
  inline void set_has_is_file_requested();
  inline void clear_has_is_file_requested();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* file_name_;
  ::google::protobuf::int32 transfer_id_;
  bool is_replay_demo_file_;
  bool deny_;
  bool is_file_requested_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_File* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_Tick : public ::google::protobuf::Message {
 public:
  CNETMsg_Tick();
  virtual ~CNETMsg_Tick();

  CNETMsg_Tick(const CNETMsg_Tick& from);

  inline CNETMsg_Tick& operator=(const CNETMsg_Tick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_Tick& default_instance();

  void Swap(CNETMsg_Tick* other);

  // implements Message ----------------------------------------------

  CNETMsg_Tick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_Tick& from);
  void MergeFrom(const CNETMsg_Tick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tick = 1;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 1;
  inline ::google::protobuf::uint32 tick() const;
  inline void set_tick(::google::protobuf::uint32 value);

  // optional uint32 host_computationtime = 4;
  inline bool has_host_computationtime() const;
  inline void clear_host_computationtime();
  static const int kHostComputationtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 host_computationtime() const;
  inline void set_host_computationtime(::google::protobuf::uint32 value);

  // optional uint32 host_computationtime_std_deviation = 5;
  inline bool has_host_computationtime_std_deviation() const;
  inline void clear_host_computationtime_std_deviation();
  static const int kHostComputationtimeStdDeviationFieldNumber = 5;
  inline ::google::protobuf::uint32 host_computationtime_std_deviation() const;
  inline void set_host_computationtime_std_deviation(::google::protobuf::uint32 value);

  // optional uint32 host_framestarttime_std_deviation = 6;
  inline bool has_host_framestarttime_std_deviation() const;
  inline void clear_host_framestarttime_std_deviation();
  static const int kHostFramestarttimeStdDeviationFieldNumber = 6;
  inline ::google::protobuf::uint32 host_framestarttime_std_deviation() const;
  inline void set_host_framestarttime_std_deviation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNETMsg_Tick)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_host_computationtime();
  inline void clear_has_host_computationtime();
  inline void set_has_host_computationtime_std_deviation();
  inline void clear_has_host_computationtime_std_deviation();
  inline void set_has_host_framestarttime_std_deviation();
  inline void clear_has_host_framestarttime_std_deviation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tick_;
  ::google::protobuf::uint32 host_computationtime_;
  ::google::protobuf::uint32 host_computationtime_std_deviation_;
  ::google::protobuf::uint32 host_framestarttime_std_deviation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_Tick* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_StringCmd : public ::google::protobuf::Message {
 public:
  CNETMsg_StringCmd();
  virtual ~CNETMsg_StringCmd();

  CNETMsg_StringCmd(const CNETMsg_StringCmd& from);

  inline CNETMsg_StringCmd& operator=(const CNETMsg_StringCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_StringCmd& default_instance();

  void Swap(CNETMsg_StringCmd* other);

  // implements Message ----------------------------------------------

  CNETMsg_StringCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_StringCmd& from);
  void MergeFrom(const CNETMsg_StringCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline const ::std::string& command() const;
  inline void set_command(const ::std::string& value);
  inline void set_command(const char* value);
  inline void set_command(const char* value, size_t size);
  inline ::std::string* mutable_command();
  inline ::std::string* release_command();
  inline void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:CNETMsg_StringCmd)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* command_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_StringCmd* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SetConVar : public ::google::protobuf::Message {
 public:
  CNETMsg_SetConVar();
  virtual ~CNETMsg_SetConVar();

  CNETMsg_SetConVar(const CNETMsg_SetConVar& from);

  inline CNETMsg_SetConVar& operator=(const CNETMsg_SetConVar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SetConVar& default_instance();

  void Swap(CNETMsg_SetConVar* other);

  // implements Message ----------------------------------------------

  CNETMsg_SetConVar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SetConVar& from);
  void MergeFrom(const CNETMsg_SetConVar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsg_CVars convars = 1;
  inline bool has_convars() const;
  inline void clear_convars();
  static const int kConvarsFieldNumber = 1;
  inline const ::CMsg_CVars& convars() const;
  inline ::CMsg_CVars* mutable_convars();
  inline ::CMsg_CVars* release_convars();
  inline void set_allocated_convars(::CMsg_CVars* convars);

  // @@protoc_insertion_point(class_scope:CNETMsg_SetConVar)
 private:
  inline void set_has_convars();
  inline void clear_has_convars();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMsg_CVars* convars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SetConVar* default_instance_;
};
// -------------------------------------------------------------------

class CNETMsg_SignonState : public ::google::protobuf::Message {
 public:
  CNETMsg_SignonState();
  virtual ~CNETMsg_SignonState();

  CNETMsg_SignonState(const CNETMsg_SignonState& from);

  inline CNETMsg_SignonState& operator=(const CNETMsg_SignonState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SignonState& default_instance();

  void Swap(CNETMsg_SignonState* other);

  // implements Message ----------------------------------------------

  CNETMsg_SignonState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNETMsg_SignonState& from);
  void MergeFrom(const CNETMsg_SignonState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 signon_state = 1;
  inline bool has_signon_state() const;
  inline void clear_signon_state();
  static const int kSignonStateFieldNumber = 1;
  inline ::google::protobuf::uint32 signon_state() const;
  inline void set_signon_state(::google::protobuf::uint32 value);

  // optional uint32 spawn_count = 2;
  inline bool has_spawn_count() const;
  inline void clear_spawn_count();
  static const int kSpawnCountFieldNumber = 2;
  inline ::google::protobuf::uint32 spawn_count() const;
  inline void set_spawn_count(::google::protobuf::uint32 value);

  // optional uint32 num_server_players = 3;
  inline bool has_num_server_players() const;
  inline void clear_num_server_players();
  static const int kNumServerPlayersFieldNumber = 3;
  inline ::google::protobuf::uint32 num_server_players() const;
  inline void set_num_server_players(::google::protobuf::uint32 value);

  // repeated string players_networkids = 4;
  inline int players_networkids_size() const;
  inline void clear_players_networkids();
  static const int kPlayersNetworkidsFieldNumber = 4;
  inline const ::std::string& players_networkids(int index) const;
  inline ::std::string* mutable_players_networkids(int index);
  inline void set_players_networkids(int index, const ::std::string& value);
  inline void set_players_networkids(int index, const char* value);
  inline void set_players_networkids(int index, const char* value, size_t size);
  inline ::std::string* add_players_networkids();
  inline void add_players_networkids(const ::std::string& value);
  inline void add_players_networkids(const char* value);
  inline void add_players_networkids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& players_networkids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_players_networkids();

  // optional string map_name = 5;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 5;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  inline ::std::string* release_map_name();
  inline void set_allocated_map_name(::std::string* map_name);

  // @@protoc_insertion_point(class_scope:CNETMsg_SignonState)
 private:
  inline void set_has_signon_state();
  inline void clear_has_signon_state();
  inline void set_has_spawn_count();
  inline void clear_has_spawn_count();
  inline void set_has_num_server_players();
  inline void clear_has_num_server_players();
  inline void set_has_map_name();
  inline void clear_has_map_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 signon_state_;
  ::google::protobuf::uint32 spawn_count_;
  ::google::protobuf::RepeatedPtrField< ::std::string> players_networkids_;
  ::std::string* map_name_;
  ::google::protobuf::uint32 num_server_players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CNETMsg_SignonState* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEvent_key_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEvent_key_t();
  virtual ~CSVCMsg_GameEvent_key_t();

  CSVCMsg_GameEvent_key_t(const CSVCMsg_GameEvent_key_t& from);

  inline CSVCMsg_GameEvent_key_t& operator=(const CSVCMsg_GameEvent_key_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEvent_key_t& default_instance();

  void Swap(CSVCMsg_GameEvent_key_t* other);

  // implements Message ----------------------------------------------

  CSVCMsg_GameEvent_key_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEvent_key_t& from);
  void MergeFrom(const CSVCMsg_GameEvent_key_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string val_string = 2;
  inline bool has_val_string() const;
  inline void clear_val_string();
  static const int kValStringFieldNumber = 2;
  inline const ::std::string& val_string() const;
  inline void set_val_string(const ::std::string& value);
  inline void set_val_string(const char* value);
  inline void set_val_string(const char* value, size_t size);
  inline ::std::string* mutable_val_string();
  inline ::std::string* release_val_string();
  inline void set_allocated_val_string(::std::string* val_string);

  // optional float val_float = 3;
  inline bool has_val_float() const;
  inline void clear_val_float();
  static const int kValFloatFieldNumber = 3;
  inline float val_float() const;
  inline void set_val_float(float value);

  // optional int32 val_long = 4;
  inline bool has_val_long() const;
  inline void clear_val_long();
  static const int kValLongFieldNumber = 4;
  inline ::google::protobuf::int32 val_long() const;
  inline void set_val_long(::google::protobuf::int32 value);

  // optional int32 val_short = 5;
  inline bool has_val_short() const;
  inline void clear_val_short();
  static const int kValShortFieldNumber = 5;
  inline ::google::protobuf::int32 val_short() const;
  inline void set_val_short(::google::protobuf::int32 value);

  // optional int32 val_byte = 6;
  inline bool has_val_byte() const;
  inline void clear_val_byte();
  static const int kValByteFieldNumber = 6;
  inline ::google::protobuf::int32 val_byte() const;
  inline void set_val_byte(::google::protobuf::int32 value);

  // optional bool val_bool = 7;
  inline bool has_val_bool() const;
  inline void clear_val_bool();
  static const int kValBoolFieldNumber = 7;
  inline bool val_bool() const;
  inline void set_val_bool(bool value);

  // optional uint64 val_uint64 = 8;
  inline bool has_val_uint64() const;
  inline void clear_val_uint64();
  static const int kValUint64FieldNumber = 8;
  inline ::google::protobuf::uint64 val_uint64() const;
  inline void set_val_uint64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEvent.key_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_val_string();
  inline void clear_has_val_string();
  inline void set_has_val_float();
  inline void clear_has_val_float();
  inline void set_has_val_long();
  inline void clear_has_val_long();
  inline void set_has_val_short();
  inline void clear_has_val_short();
  inline void set_has_val_byte();
  inline void clear_has_val_byte();
  inline void set_has_val_bool();
  inline void clear_has_val_bool();
  inline void set_has_val_uint64();
  inline void clear_has_val_uint64();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* val_string_;
  ::google::protobuf::int32 type_;
  float val_float_;
  ::google::protobuf::int32 val_long_;
  ::google::protobuf::int32 val_short_;
  ::google::protobuf::int32 val_byte_;
  bool val_bool_;
  ::google::protobuf::uint64 val_uint64_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEvent_key_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEvent : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEvent();
  virtual ~CSVCMsg_GameEvent();

  CSVCMsg_GameEvent(const CSVCMsg_GameEvent& from);

  inline CSVCMsg_GameEvent& operator=(const CSVCMsg_GameEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEvent& default_instance();

  void Swap(CSVCMsg_GameEvent* other);

  // implements Message ----------------------------------------------

  CSVCMsg_GameEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEvent& from);
  void MergeFrom(const CSVCMsg_GameEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_GameEvent_key_t key_t;

  // accessors -------------------------------------------------------

  // optional string event_name = 1;
  inline bool has_event_name() const;
  inline void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  inline const ::std::string& event_name() const;
  inline void set_event_name(const ::std::string& value);
  inline void set_event_name(const char* value);
  inline void set_event_name(const char* value, size_t size);
  inline ::std::string* mutable_event_name();
  inline ::std::string* release_event_name();
  inline void set_allocated_event_name(::std::string* event_name);

  // optional int32 eventid = 2;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 2;
  inline ::google::protobuf::int32 eventid() const;
  inline void set_eventid(::google::protobuf::int32 value);

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 3;
  inline const ::CSVCMsg_GameEvent_key_t& keys(int index) const;
  inline ::CSVCMsg_GameEvent_key_t* mutable_keys(int index);
  inline ::CSVCMsg_GameEvent_key_t* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEvent)
 private:
  inline void set_has_event_name();
  inline void clear_has_event_name();
  inline void set_has_eventid();
  inline void clear_has_eventid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* event_name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t > keys_;
  ::google::protobuf::int32 eventid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEvent* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_GameEvents_event_t : public ::google::protobuf::Message {
 public:
  CSVCMsgList_GameEvents_event_t();
  virtual ~CSVCMsgList_GameEvents_event_t();

  CSVCMsgList_GameEvents_event_t(const CSVCMsgList_GameEvents_event_t& from);

  inline CSVCMsgList_GameEvents_event_t& operator=(const CSVCMsgList_GameEvents_event_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_GameEvents_event_t& default_instance();

  void Swap(CSVCMsgList_GameEvents_event_t* other);

  // implements Message ----------------------------------------------

  CSVCMsgList_GameEvents_event_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_GameEvents_event_t& from);
  void MergeFrom(const CSVCMsgList_GameEvents_event_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 1;
  inline ::google::protobuf::int32 tick() const;
  inline void set_tick(::google::protobuf::int32 value);

  // optional .CSVCMsg_GameEvent event = 2;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 2;
  inline const ::CSVCMsg_GameEvent& event() const;
  inline ::CSVCMsg_GameEvent* mutable_event();
  inline ::CSVCMsg_GameEvent* release_event();
  inline void set_allocated_event(::CSVCMsg_GameEvent* event);

  // @@protoc_insertion_point(class_scope:CSVCMsgList_GameEvents.event_t)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_event();
  inline void clear_has_event();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSVCMsg_GameEvent* event_;
  ::google::protobuf::int32 tick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_GameEvents_event_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_GameEvents : public ::google::protobuf::Message {
 public:
  CSVCMsgList_GameEvents();
  virtual ~CSVCMsgList_GameEvents();

  CSVCMsgList_GameEvents(const CSVCMsgList_GameEvents& from);

  inline CSVCMsgList_GameEvents& operator=(const CSVCMsgList_GameEvents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_GameEvents& default_instance();

  void Swap(CSVCMsgList_GameEvents* other);

  // implements Message ----------------------------------------------

  CSVCMsgList_GameEvents* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_GameEvents& from);
  void MergeFrom(const CSVCMsgList_GameEvents& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsgList_GameEvents_event_t event_t;

  // accessors -------------------------------------------------------

  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  inline int events_size() const;
  inline void clear_events();
  static const int kEventsFieldNumber = 1;
  inline const ::CSVCMsgList_GameEvents_event_t& events(int index) const;
  inline ::CSVCMsgList_GameEvents_event_t* mutable_events(int index);
  inline ::CSVCMsgList_GameEvents_event_t* add_events();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >&
      events() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >*
      mutable_events();

  // @@protoc_insertion_point(class_scope:CSVCMsgList_GameEvents)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t > events_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_GameEvents* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_UserMessage : public ::google::protobuf::Message {
 public:
  CSVCMsg_UserMessage();
  virtual ~CSVCMsg_UserMessage();

  CSVCMsg_UserMessage(const CSVCMsg_UserMessage& from);

  inline CSVCMsg_UserMessage& operator=(const CSVCMsg_UserMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_UserMessage& default_instance();

  void Swap(CSVCMsg_UserMessage* other);

  // implements Message ----------------------------------------------

  CSVCMsg_UserMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_UserMessage& from);
  void MergeFrom(const CSVCMsg_UserMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::int32 msg_type() const;
  inline void set_msg_type(::google::protobuf::int32 value);

  // optional bytes msg_data = 2;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  inline const ::std::string& msg_data() const;
  inline void set_msg_data(const ::std::string& value);
  inline void set_msg_data(const char* value);
  inline void set_msg_data(const void* value, size_t size);
  inline ::std::string* mutable_msg_data();
  inline ::std::string* release_msg_data();
  inline void set_allocated_msg_data(::std::string* msg_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_UserMessage)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_data_;
  ::google::protobuf::int32 msg_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_UserMessage* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_UserMessages_usermsg_t : public ::google::protobuf::Message {
 public:
  CSVCMsgList_UserMessages_usermsg_t();
  virtual ~CSVCMsgList_UserMessages_usermsg_t();

  CSVCMsgList_UserMessages_usermsg_t(const CSVCMsgList_UserMessages_usermsg_t& from);

  inline CSVCMsgList_UserMessages_usermsg_t& operator=(const CSVCMsgList_UserMessages_usermsg_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_UserMessages_usermsg_t& default_instance();

  void Swap(CSVCMsgList_UserMessages_usermsg_t* other);

  // implements Message ----------------------------------------------

  CSVCMsgList_UserMessages_usermsg_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_UserMessages_usermsg_t& from);
  void MergeFrom(const CSVCMsgList_UserMessages_usermsg_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 1;
  inline ::google::protobuf::int32 tick() const;
  inline void set_tick(::google::protobuf::int32 value);

  // optional .CSVCMsg_UserMessage msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::CSVCMsg_UserMessage& msg() const;
  inline ::CSVCMsg_UserMessage* mutable_msg();
  inline ::CSVCMsg_UserMessage* release_msg();
  inline void set_allocated_msg(::CSVCMsg_UserMessage* msg);

  // @@protoc_insertion_point(class_scope:CSVCMsgList_UserMessages.usermsg_t)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSVCMsg_UserMessage* msg_;
  ::google::protobuf::int32 tick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_UserMessages_usermsg_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsgList_UserMessages : public ::google::protobuf::Message {
 public:
  CSVCMsgList_UserMessages();
  virtual ~CSVCMsgList_UserMessages();

  CSVCMsgList_UserMessages(const CSVCMsgList_UserMessages& from);

  inline CSVCMsgList_UserMessages& operator=(const CSVCMsgList_UserMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsgList_UserMessages& default_instance();

  void Swap(CSVCMsgList_UserMessages* other);

  // implements Message ----------------------------------------------

  CSVCMsgList_UserMessages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsgList_UserMessages& from);
  void MergeFrom(const CSVCMsgList_UserMessages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsgList_UserMessages_usermsg_t usermsg_t;

  // accessors -------------------------------------------------------

  // repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
  inline int usermsgs_size() const;
  inline void clear_usermsgs();
  static const int kUsermsgsFieldNumber = 1;
  inline const ::CSVCMsgList_UserMessages_usermsg_t& usermsgs(int index) const;
  inline ::CSVCMsgList_UserMessages_usermsg_t* mutable_usermsgs(int index);
  inline ::CSVCMsgList_UserMessages_usermsg_t* add_usermsgs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >&
      usermsgs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >*
      mutable_usermsgs();

  // @@protoc_insertion_point(class_scope:CSVCMsgList_UserMessages)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t > usermsgs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_networkbasetypes_2eproto();
  friend void protobuf_AssignDesc_networkbasetypes_2eproto();
  friend void protobuf_ShutdownFile_networkbasetypes_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsgList_UserMessages* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgVector

// optional float x = 1;
inline bool CMsgVector::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVector::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVector::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVector::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgVector::x() const {
  return x_;
}
inline void CMsgVector::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 2;
inline bool CMsgVector::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVector::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVector::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVector::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgVector::y() const {
  return y_;
}
inline void CMsgVector::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float z = 3;
inline bool CMsgVector::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgVector::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgVector::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgVector::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float CMsgVector::z() const {
  return z_;
}
inline void CMsgVector::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// CMsgVector2D

// optional float x = 1;
inline bool CMsgVector2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVector2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVector2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVector2D::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgVector2D::x() const {
  return x_;
}
inline void CMsgVector2D::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 2;
inline bool CMsgVector2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVector2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVector2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVector2D::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgVector2D::y() const {
  return y_;
}
inline void CMsgVector2D::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// CMsgQAngle

// optional float x = 1;
inline bool CMsgQAngle::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQAngle::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQAngle::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQAngle::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgQAngle::x() const {
  return x_;
}
inline void CMsgQAngle::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 2;
inline bool CMsgQAngle::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgQAngle::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgQAngle::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgQAngle::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgQAngle::y() const {
  return y_;
}
inline void CMsgQAngle::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float z = 3;
inline bool CMsgQAngle::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgQAngle::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgQAngle::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgQAngle::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float CMsgQAngle::z() const {
  return z_;
}
inline void CMsgQAngle::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// CMsg_CVars_CVar

// optional string name = 1;
inline bool CMsg_CVars_CVar::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg_CVars_CVar::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg_CVars_CVar::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg_CVars_CVar::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsg_CVars_CVar::name() const {
  return *name_;
}
inline void CMsg_CVars_CVar::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsg_CVars_CVar::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsg_CVars_CVar::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsg_CVars_CVar::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsg_CVars_CVar::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsg_CVars_CVar::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string value = 2;
inline bool CMsg_CVars_CVar::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg_CVars_CVar::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg_CVars_CVar::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg_CVars_CVar::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CMsg_CVars_CVar::value() const {
  return *value_;
}
inline void CMsg_CVars_CVar::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsg_CVars_CVar::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsg_CVars_CVar::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsg_CVars_CVar::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CMsg_CVars_CVar::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsg_CVars_CVar::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsg_CVars

// repeated .CMsg_CVars.CVar cvars = 1;
inline int CMsg_CVars::cvars_size() const {
  return cvars_.size();
}
inline void CMsg_CVars::clear_cvars() {
  cvars_.Clear();
}
inline const ::CMsg_CVars_CVar& CMsg_CVars::cvars(int index) const {
  return cvars_.Get(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::mutable_cvars(int index) {
  return cvars_.Mutable(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::add_cvars() {
  return cvars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
CMsg_CVars::cvars() const {
  return cvars_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
CMsg_CVars::mutable_cvars() {
  return &cvars_;
}

// -------------------------------------------------------------------

// CNETMsg_NOP

// -------------------------------------------------------------------

// CNETMsg_SplitScreenUser

// optional int32 slot = 1;
inline bool CNETMsg_SplitScreenUser::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SplitScreenUser::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SplitScreenUser::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SplitScreenUser::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 CNETMsg_SplitScreenUser::slot() const {
  return slot_;
}
inline void CNETMsg_SplitScreenUser::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
}

// -------------------------------------------------------------------

// CNETMsg_Disconnect

// optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
inline bool CNETMsg_Disconnect::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_Disconnect::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_Disconnect::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_Disconnect::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::ENetworkDisconnectionReason CNETMsg_Disconnect::reason() const {
  return static_cast< ::ENetworkDisconnectionReason >(reason_);
}
inline void CNETMsg_Disconnect::set_reason(::ENetworkDisconnectionReason value) {
  assert(::ENetworkDisconnectionReason_IsValid(value));
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// CNETMsg_File

// optional int32 transfer_id = 1;
inline bool CNETMsg_File::has_transfer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_File::set_has_transfer_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_File::clear_has_transfer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_File::clear_transfer_id() {
  transfer_id_ = 0;
  clear_has_transfer_id();
}
inline ::google::protobuf::int32 CNETMsg_File::transfer_id() const {
  return transfer_id_;
}
inline void CNETMsg_File::set_transfer_id(::google::protobuf::int32 value) {
  set_has_transfer_id();
  transfer_id_ = value;
}

// optional string file_name = 2;
inline bool CNETMsg_File::has_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_File::set_has_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_File::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_File::clear_file_name() {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    file_name_->clear();
  }
  clear_has_file_name();
}
inline const ::std::string& CNETMsg_File::file_name() const {
  return *file_name_;
}
inline void CNETMsg_File::set_file_name(const ::std::string& value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void CNETMsg_File::set_file_name(const char* value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void CNETMsg_File::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CNETMsg_File::mutable_file_name() {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  return file_name_;
}
inline ::std::string* CNETMsg_File::release_file_name() {
  clear_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_name_;
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CNETMsg_File::set_allocated_file_name(::std::string* file_name) {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete file_name_;
  }
  if (file_name) {
    set_has_file_name();
    file_name_ = file_name;
  } else {
    clear_has_file_name();
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_replay_demo_file = 3;
inline bool CNETMsg_File::has_is_replay_demo_file() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_File::set_has_is_replay_demo_file() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_File::clear_has_is_replay_demo_file() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_File::clear_is_replay_demo_file() {
  is_replay_demo_file_ = false;
  clear_has_is_replay_demo_file();
}
inline bool CNETMsg_File::is_replay_demo_file() const {
  return is_replay_demo_file_;
}
inline void CNETMsg_File::set_is_replay_demo_file(bool value) {
  set_has_is_replay_demo_file();
  is_replay_demo_file_ = value;
}

// optional bool deny = 4;
inline bool CNETMsg_File::has_deny() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CNETMsg_File::set_has_deny() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CNETMsg_File::clear_has_deny() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CNETMsg_File::clear_deny() {
  deny_ = false;
  clear_has_deny();
}
inline bool CNETMsg_File::deny() const {
  return deny_;
}
inline void CNETMsg_File::set_deny(bool value) {
  set_has_deny();
  deny_ = value;
}

// optional bool is_file_requested = 5;
inline bool CNETMsg_File::has_is_file_requested() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CNETMsg_File::set_has_is_file_requested() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CNETMsg_File::clear_has_is_file_requested() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CNETMsg_File::clear_is_file_requested() {
  is_file_requested_ = false;
  clear_has_is_file_requested();
}
inline bool CNETMsg_File::is_file_requested() const {
  return is_file_requested_;
}
inline void CNETMsg_File::set_is_file_requested(bool value) {
  set_has_is_file_requested();
  is_file_requested_ = value;
}

// -------------------------------------------------------------------

// CNETMsg_Tick

// optional uint32 tick = 1;
inline bool CNETMsg_Tick::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_Tick::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_Tick::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_Tick::clear_tick() {
  tick_ = 0u;
  clear_has_tick();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::tick() const {
  return tick_;
}
inline void CNETMsg_Tick::set_tick(::google::protobuf::uint32 value) {
  set_has_tick();
  tick_ = value;
}

// optional uint32 host_computationtime = 4;
inline bool CNETMsg_Tick::has_host_computationtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_Tick::set_has_host_computationtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_Tick::clear_has_host_computationtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_Tick::clear_host_computationtime() {
  host_computationtime_ = 0u;
  clear_has_host_computationtime();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_computationtime() const {
  return host_computationtime_;
}
inline void CNETMsg_Tick::set_host_computationtime(::google::protobuf::uint32 value) {
  set_has_host_computationtime();
  host_computationtime_ = value;
}

// optional uint32 host_computationtime_std_deviation = 5;
inline bool CNETMsg_Tick::has_host_computationtime_std_deviation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_Tick::set_has_host_computationtime_std_deviation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_Tick::clear_has_host_computationtime_std_deviation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_Tick::clear_host_computationtime_std_deviation() {
  host_computationtime_std_deviation_ = 0u;
  clear_has_host_computationtime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_computationtime_std_deviation() const {
  return host_computationtime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_computationtime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_computationtime_std_deviation();
  host_computationtime_std_deviation_ = value;
}

// optional uint32 host_framestarttime_std_deviation = 6;
inline bool CNETMsg_Tick::has_host_framestarttime_std_deviation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CNETMsg_Tick::set_has_host_framestarttime_std_deviation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CNETMsg_Tick::clear_has_host_framestarttime_std_deviation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CNETMsg_Tick::clear_host_framestarttime_std_deviation() {
  host_framestarttime_std_deviation_ = 0u;
  clear_has_host_framestarttime_std_deviation();
}
inline ::google::protobuf::uint32 CNETMsg_Tick::host_framestarttime_std_deviation() const {
  return host_framestarttime_std_deviation_;
}
inline void CNETMsg_Tick::set_host_framestarttime_std_deviation(::google::protobuf::uint32 value) {
  set_has_host_framestarttime_std_deviation();
  host_framestarttime_std_deviation_ = value;
}

// -------------------------------------------------------------------

// CNETMsg_StringCmd

// optional string command = 1;
inline bool CNETMsg_StringCmd::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_StringCmd::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_StringCmd::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_StringCmd::clear_command() {
  if (command_ != &::google::protobuf::internal::kEmptyString) {
    command_->clear();
  }
  clear_has_command();
}
inline const ::std::string& CNETMsg_StringCmd::command() const {
  return *command_;
}
inline void CNETMsg_StringCmd::set_command(const ::std::string& value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(value);
}
inline void CNETMsg_StringCmd::set_command(const char* value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(value);
}
inline void CNETMsg_StringCmd::set_command(const char* value, size_t size) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CNETMsg_StringCmd::mutable_command() {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  return command_;
}
inline ::std::string* CNETMsg_StringCmd::release_command() {
  clear_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = command_;
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CNETMsg_StringCmd::set_allocated_command(::std::string* command) {
  if (command_ != &::google::protobuf::internal::kEmptyString) {
    delete command_;
  }
  if (command) {
    set_has_command();
    command_ = command;
  } else {
    clear_has_command();
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CNETMsg_SetConVar

// optional .CMsg_CVars convars = 1;
inline bool CNETMsg_SetConVar::has_convars() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SetConVar::set_has_convars() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SetConVar::clear_has_convars() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SetConVar::clear_convars() {
  if (convars_ != NULL) convars_->::CMsg_CVars::Clear();
  clear_has_convars();
}
inline const ::CMsg_CVars& CNETMsg_SetConVar::convars() const {
  return convars_ != NULL ? *convars_ : *default_instance_->convars_;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::mutable_convars() {
  set_has_convars();
  if (convars_ == NULL) convars_ = new ::CMsg_CVars;
  return convars_;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::release_convars() {
  clear_has_convars();
  ::CMsg_CVars* temp = convars_;
  convars_ = NULL;
  return temp;
}
inline void CNETMsg_SetConVar::set_allocated_convars(::CMsg_CVars* convars) {
  delete convars_;
  convars_ = convars;
  if (convars) {
    set_has_convars();
  } else {
    clear_has_convars();
  }
}

// -------------------------------------------------------------------

// CNETMsg_SignonState

// optional uint32 signon_state = 1;
inline bool CNETMsg_SignonState::has_signon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SignonState::set_has_signon_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SignonState::clear_has_signon_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SignonState::clear_signon_state() {
  signon_state_ = 0u;
  clear_has_signon_state();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::signon_state() const {
  return signon_state_;
}
inline void CNETMsg_SignonState::set_signon_state(::google::protobuf::uint32 value) {
  set_has_signon_state();
  signon_state_ = value;
}

// optional uint32 spawn_count = 2;
inline bool CNETMsg_SignonState::has_spawn_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNETMsg_SignonState::set_has_spawn_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNETMsg_SignonState::clear_has_spawn_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNETMsg_SignonState::clear_spawn_count() {
  spawn_count_ = 0u;
  clear_has_spawn_count();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::spawn_count() const {
  return spawn_count_;
}
inline void CNETMsg_SignonState::set_spawn_count(::google::protobuf::uint32 value) {
  set_has_spawn_count();
  spawn_count_ = value;
}

// optional uint32 num_server_players = 3;
inline bool CNETMsg_SignonState::has_num_server_players() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CNETMsg_SignonState::set_has_num_server_players() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CNETMsg_SignonState::clear_has_num_server_players() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CNETMsg_SignonState::clear_num_server_players() {
  num_server_players_ = 0u;
  clear_has_num_server_players();
}
inline ::google::protobuf::uint32 CNETMsg_SignonState::num_server_players() const {
  return num_server_players_;
}
inline void CNETMsg_SignonState::set_num_server_players(::google::protobuf::uint32 value) {
  set_has_num_server_players();
  num_server_players_ = value;
}

// repeated string players_networkids = 4;
inline int CNETMsg_SignonState::players_networkids_size() const {
  return players_networkids_.size();
}
inline void CNETMsg_SignonState::clear_players_networkids() {
  players_networkids_.Clear();
}
inline const ::std::string& CNETMsg_SignonState::players_networkids(int index) const {
  return players_networkids_.Get(index);
}
inline ::std::string* CNETMsg_SignonState::mutable_players_networkids(int index) {
  return players_networkids_.Mutable(index);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const ::std::string& value) {
  players_networkids_.Mutable(index)->assign(value);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const char* value) {
  players_networkids_.Mutable(index)->assign(value);
}
inline void CNETMsg_SignonState::set_players_networkids(int index, const char* value, size_t size) {
  players_networkids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CNETMsg_SignonState::add_players_networkids() {
  return players_networkids_.Add();
}
inline void CNETMsg_SignonState::add_players_networkids(const ::std::string& value) {
  players_networkids_.Add()->assign(value);
}
inline void CNETMsg_SignonState::add_players_networkids(const char* value) {
  players_networkids_.Add()->assign(value);
}
inline void CNETMsg_SignonState::add_players_networkids(const char* value, size_t size) {
  players_networkids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CNETMsg_SignonState::players_networkids() const {
  return players_networkids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CNETMsg_SignonState::mutable_players_networkids() {
  return &players_networkids_;
}

// optional string map_name = 5;
inline bool CNETMsg_SignonState::has_map_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CNETMsg_SignonState::set_has_map_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CNETMsg_SignonState::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CNETMsg_SignonState::clear_map_name() {
  if (map_name_ != &::google::protobuf::internal::kEmptyString) {
    map_name_->clear();
  }
  clear_has_map_name();
}
inline const ::std::string& CNETMsg_SignonState::map_name() const {
  return *map_name_;
}
inline void CNETMsg_SignonState::set_map_name(const ::std::string& value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::kEmptyString) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
}
inline void CNETMsg_SignonState::set_map_name(const char* value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::kEmptyString) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
}
inline void CNETMsg_SignonState::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::kEmptyString) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CNETMsg_SignonState::mutable_map_name() {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::kEmptyString) {
    map_name_ = new ::std::string;
  }
  return map_name_;
}
inline ::std::string* CNETMsg_SignonState::release_map_name() {
  clear_has_map_name();
  if (map_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = map_name_;
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CNETMsg_SignonState::set_allocated_map_name(::std::string* map_name) {
  if (map_name_ != &::google::protobuf::internal::kEmptyString) {
    delete map_name_;
  }
  if (map_name) {
    set_has_map_name();
    map_name_ = map_name;
  } else {
    clear_has_map_name();
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSVCMsg_GameEvent_key_t

// optional int32 type = 1;
inline bool CSVCMsg_GameEvent_key_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEvent_key_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::type() const {
  return type_;
}
inline void CSVCMsg_GameEvent_key_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string val_string = 2;
inline bool CSVCMsg_GameEvent_key_t::has_val_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_string() {
  if (val_string_ != &::google::protobuf::internal::kEmptyString) {
    val_string_->clear();
  }
  clear_has_val_string();
}
inline const ::std::string& CSVCMsg_GameEvent_key_t::val_string() const {
  return *val_string_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const ::std::string& value) {
  set_has_val_string();
  if (val_string_ == &::google::protobuf::internal::kEmptyString) {
    val_string_ = new ::std::string;
  }
  val_string_->assign(value);
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const char* value) {
  set_has_val_string();
  if (val_string_ == &::google::protobuf::internal::kEmptyString) {
    val_string_ = new ::std::string;
  }
  val_string_->assign(value);
}
inline void CSVCMsg_GameEvent_key_t::set_val_string(const char* value, size_t size) {
  set_has_val_string();
  if (val_string_ == &::google::protobuf::internal::kEmptyString) {
    val_string_ = new ::std::string;
  }
  val_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSVCMsg_GameEvent_key_t::mutable_val_string() {
  set_has_val_string();
  if (val_string_ == &::google::protobuf::internal::kEmptyString) {
    val_string_ = new ::std::string;
  }
  return val_string_;
}
inline ::std::string* CSVCMsg_GameEvent_key_t::release_val_string() {
  clear_has_val_string();
  if (val_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = val_string_;
    val_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSVCMsg_GameEvent_key_t::set_allocated_val_string(::std::string* val_string) {
  if (val_string_ != &::google::protobuf::internal::kEmptyString) {
    delete val_string_;
  }
  if (val_string) {
    set_has_val_string();
    val_string_ = val_string;
  } else {
    clear_has_val_string();
    val_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional float val_float = 3;
inline bool CSVCMsg_GameEvent_key_t::has_val_float() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_float() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_float() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_float() {
  val_float_ = 0;
  clear_has_val_float();
}
inline float CSVCMsg_GameEvent_key_t::val_float() const {
  return val_float_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_float(float value) {
  set_has_val_float();
  val_float_ = value;
}

// optional int32 val_long = 4;
inline bool CSVCMsg_GameEvent_key_t::has_val_long() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_long() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_long() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_long() {
  val_long_ = 0;
  clear_has_val_long();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_long() const {
  return val_long_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_long(::google::protobuf::int32 value) {
  set_has_val_long();
  val_long_ = value;
}

// optional int32 val_short = 5;
inline bool CSVCMsg_GameEvent_key_t::has_val_short() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_short() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_short() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_short() {
  val_short_ = 0;
  clear_has_val_short();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_short() const {
  return val_short_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_short(::google::protobuf::int32 value) {
  set_has_val_short();
  val_short_ = value;
}

// optional int32 val_byte = 6;
inline bool CSVCMsg_GameEvent_key_t::has_val_byte() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_byte() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_byte() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_byte() {
  val_byte_ = 0;
  clear_has_val_byte();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent_key_t::val_byte() const {
  return val_byte_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_byte(::google::protobuf::int32 value) {
  set_has_val_byte();
  val_byte_ = value;
}

// optional bool val_bool = 7;
inline bool CSVCMsg_GameEvent_key_t::has_val_bool() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_bool() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_bool() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_bool() {
  val_bool_ = false;
  clear_has_val_bool();
}
inline bool CSVCMsg_GameEvent_key_t::val_bool() const {
  return val_bool_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_bool(bool value) {
  set_has_val_bool();
  val_bool_ = value;
}

// optional uint64 val_uint64 = 8;
inline bool CSVCMsg_GameEvent_key_t::has_val_uint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_GameEvent_key_t::set_has_val_uint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_GameEvent_key_t::clear_has_val_uint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_GameEvent_key_t::clear_val_uint64() {
  val_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_val_uint64();
}
inline ::google::protobuf::uint64 CSVCMsg_GameEvent_key_t::val_uint64() const {
  return val_uint64_;
}
inline void CSVCMsg_GameEvent_key_t::set_val_uint64(::google::protobuf::uint64 value) {
  set_has_val_uint64();
  val_uint64_ = value;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEvent

// optional string event_name = 1;
inline bool CSVCMsg_GameEvent::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEvent::set_has_event_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEvent::clear_has_event_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEvent::clear_event_name() {
  if (event_name_ != &::google::protobuf::internal::kEmptyString) {
    event_name_->clear();
  }
  clear_has_event_name();
}
inline const ::std::string& CSVCMsg_GameEvent::event_name() const {
  return *event_name_;
}
inline void CSVCMsg_GameEvent::set_event_name(const ::std::string& value) {
  set_has_event_name();
  if (event_name_ == &::google::protobuf::internal::kEmptyString) {
    event_name_ = new ::std::string;
  }
  event_name_->assign(value);
}
inline void CSVCMsg_GameEvent::set_event_name(const char* value) {
  set_has_event_name();
  if (event_name_ == &::google::protobuf::internal::kEmptyString) {
    event_name_ = new ::std::string;
  }
  event_name_->assign(value);
}
inline void CSVCMsg_GameEvent::set_event_name(const char* value, size_t size) {
  set_has_event_name();
  if (event_name_ == &::google::protobuf::internal::kEmptyString) {
    event_name_ = new ::std::string;
  }
  event_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSVCMsg_GameEvent::mutable_event_name() {
  set_has_event_name();
  if (event_name_ == &::google::protobuf::internal::kEmptyString) {
    event_name_ = new ::std::string;
  }
  return event_name_;
}
inline ::std::string* CSVCMsg_GameEvent::release_event_name() {
  clear_has_event_name();
  if (event_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = event_name_;
    event_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSVCMsg_GameEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name_ != &::google::protobuf::internal::kEmptyString) {
    delete event_name_;
  }
  if (event_name) {
    set_has_event_name();
    event_name_ = event_name;
  } else {
    clear_has_event_name();
    event_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 eventid = 2;
inline bool CSVCMsg_GameEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEvent::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 CSVCMsg_GameEvent::eventid() const {
  return eventid_;
}
inline void CSVCMsg_GameEvent::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
}

// repeated .CSVCMsg_GameEvent.key_t keys = 3;
inline int CSVCMsg_GameEvent::keys_size() const {
  return keys_.size();
}
inline void CSVCMsg_GameEvent::clear_keys() {
  keys_.Clear();
}
inline const ::CSVCMsg_GameEvent_key_t& CSVCMsg_GameEvent::keys(int index) const {
  return keys_.Get(index);
}
inline ::CSVCMsg_GameEvent_key_t* CSVCMsg_GameEvent::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline ::CSVCMsg_GameEvent_key_t* CSVCMsg_GameEvent::add_keys() {
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >&
CSVCMsg_GameEvent::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEvent_key_t >*
CSVCMsg_GameEvent::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CSVCMsgList_GameEvents_event_t

// optional int32 tick = 1;
inline bool CSVCMsgList_GameEvents_event_t::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsgList_GameEvents_event_t::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 CSVCMsgList_GameEvents_event_t::tick() const {
  return tick_;
}
inline void CSVCMsgList_GameEvents_event_t::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
}

// optional .CSVCMsg_GameEvent event = 2;
inline bool CSVCMsgList_GameEvents_event_t::has_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsgList_GameEvents_event_t::set_has_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_has_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsgList_GameEvents_event_t::clear_event() {
  if (event_ != NULL) event_->::CSVCMsg_GameEvent::Clear();
  clear_has_event();
}
inline const ::CSVCMsg_GameEvent& CSVCMsgList_GameEvents_event_t::event() const {
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
inline ::CSVCMsg_GameEvent* CSVCMsgList_GameEvents_event_t::mutable_event() {
  set_has_event();
  if (event_ == NULL) event_ = new ::CSVCMsg_GameEvent;
  return event_;
}
inline ::CSVCMsg_GameEvent* CSVCMsgList_GameEvents_event_t::release_event() {
  clear_has_event();
  ::CSVCMsg_GameEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline void CSVCMsgList_GameEvents_event_t::set_allocated_event(::CSVCMsg_GameEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
}

// -------------------------------------------------------------------

// CSVCMsgList_GameEvents

// repeated .CSVCMsgList_GameEvents.event_t events = 1;
inline int CSVCMsgList_GameEvents::events_size() const {
  return events_.size();
}
inline void CSVCMsgList_GameEvents::clear_events() {
  events_.Clear();
}
inline const ::CSVCMsgList_GameEvents_event_t& CSVCMsgList_GameEvents::events(int index) const {
  return events_.Get(index);
}
inline ::CSVCMsgList_GameEvents_event_t* CSVCMsgList_GameEvents::mutable_events(int index) {
  return events_.Mutable(index);
}
inline ::CSVCMsgList_GameEvents_event_t* CSVCMsgList_GameEvents::add_events() {
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >&
CSVCMsgList_GameEvents::events() const {
  return events_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_GameEvents_event_t >*
CSVCMsgList_GameEvents::mutable_events() {
  return &events_;
}

// -------------------------------------------------------------------

// CSVCMsg_UserMessage

// optional int32 msg_type = 1;
inline bool CSVCMsg_UserMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_UserMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_UserMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_UserMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 CSVCMsg_UserMessage::msg_type() const {
  return msg_type_;
}
inline void CSVCMsg_UserMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
}

// optional bytes msg_data = 2;
inline bool CSVCMsg_UserMessage::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_UserMessage::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_UserMessage::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_UserMessage::clear_msg_data() {
  if (msg_data_ != &::google::protobuf::internal::kEmptyString) {
    msg_data_->clear();
  }
  clear_has_msg_data();
}
inline const ::std::string& CSVCMsg_UserMessage::msg_data() const {
  return *msg_data_;
}
inline void CSVCMsg_UserMessage::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::kEmptyString) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
}
inline void CSVCMsg_UserMessage::set_msg_data(const char* value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::kEmptyString) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
}
inline void CSVCMsg_UserMessage::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::kEmptyString) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSVCMsg_UserMessage::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::kEmptyString) {
    msg_data_ = new ::std::string;
  }
  return msg_data_;
}
inline ::std::string* CSVCMsg_UserMessage::release_msg_data() {
  clear_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_data_;
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSVCMsg_UserMessage::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_data_;
  }
  if (msg_data) {
    set_has_msg_data();
    msg_data_ = msg_data;
  } else {
    clear_has_msg_data();
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSVCMsgList_UserMessages_usermsg_t

// optional int32 tick = 1;
inline bool CSVCMsgList_UserMessages_usermsg_t::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 CSVCMsgList_UserMessages_usermsg_t::tick() const {
  return tick_;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
}

// optional .CSVCMsg_UserMessage msg = 2;
inline bool CSVCMsgList_UserMessages_usermsg_t::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsgList_UserMessages_usermsg_t::clear_msg() {
  if (msg_ != NULL) msg_->::CSVCMsg_UserMessage::Clear();
  clear_has_msg();
}
inline const ::CSVCMsg_UserMessage& CSVCMsgList_UserMessages_usermsg_t::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::CSVCMsg_UserMessage* CSVCMsgList_UserMessages_usermsg_t::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::CSVCMsg_UserMessage;
  return msg_;
}
inline ::CSVCMsg_UserMessage* CSVCMsgList_UserMessages_usermsg_t::release_msg() {
  clear_has_msg();
  ::CSVCMsg_UserMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void CSVCMsgList_UserMessages_usermsg_t::set_allocated_msg(::CSVCMsg_UserMessage* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// -------------------------------------------------------------------

// CSVCMsgList_UserMessages

// repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
inline int CSVCMsgList_UserMessages::usermsgs_size() const {
  return usermsgs_.size();
}
inline void CSVCMsgList_UserMessages::clear_usermsgs() {
  usermsgs_.Clear();
}
inline const ::CSVCMsgList_UserMessages_usermsg_t& CSVCMsgList_UserMessages::usermsgs(int index) const {
  return usermsgs_.Get(index);
}
inline ::CSVCMsgList_UserMessages_usermsg_t* CSVCMsgList_UserMessages::mutable_usermsgs(int index) {
  return usermsgs_.Mutable(index);
}
inline ::CSVCMsgList_UserMessages_usermsg_t* CSVCMsgList_UserMessages::add_usermsgs() {
  return usermsgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >&
CSVCMsgList_UserMessages::usermsgs() const {
  return usermsgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsgList_UserMessages_usermsg_t >*
CSVCMsgList_UserMessages::mutable_usermsgs() {
  return &usermsgs_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SIGNONSTATE>() {
  return ::SIGNONSTATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NET_Messages>() {
  return ::NET_Messages_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_networkbasetypes_2eproto__INCLUDED
